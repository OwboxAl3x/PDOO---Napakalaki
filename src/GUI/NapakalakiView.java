/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import javax.swing.JOptionPane;
import napakalaki.CombatResult;
import napakalaki.Napakalaki;
import napakalaki.Player;


public class NapakalakiView extends javax.swing.JFrame {

    Napakalaki napakalakiModel;
    Player p;
    
    /**
     * Creates new form NapakalakiView
     */
    public NapakalakiView() {
        initComponents();
    }
    
    public void setNapakalaki(Napakalaki nuevo){
        
        this.napakalakiModel = nuevo;
        this.p = this.playerView1.getPlayer();
        
        this.playerView1.setNapakalaki(nuevo, this);

        this.playerView1.setPlayer(nuevo.getCurrentPlayer());
        this.monsterView1.setMonster(nuevo.getCurrentMonster());
        this.monsterView1.setVisible(false);
        
        this.resultCombat.setText(" ");
        
        repaint();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nextMonster = new javax.swing.JButton();
        combat = new javax.swing.JButton();
        nTurn = new javax.swing.JButton();
        resultCombat = new javax.swing.JLabel();
        playerView1 = new GUI.PlayerView();
        monsterView1 = new GUI.MonsterView();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(getMaximumSize());

        nextMonster.setText("Meet the Monster");
        nextMonster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextMonsterActionPerformed(evt);
            }
        });

        combat.setText("Combat");
        combat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combatActionPerformed(evt);
            }
        });

        nTurn.setText("Next Turn");
        nTurn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nTurnActionPerformed(evt);
            }
        });

        resultCombat.setText("Result");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(playerView1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultCombat)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nextMonster)
                        .addGap(18, 18, 18)
                        .addComponent(combat)
                        .addGap(27, 27, 27)
                        .addComponent(nTurn))
                    .addComponent(monsterView1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(monsterView1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(resultCombat)
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nextMonster)
                            .addComponent(combat)
                            .addComponent(nTurn)))
                    .addComponent(playerView1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(103, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void combatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combatActionPerformed
        // TODO add your handling code here:
        
        this.combat.setEnabled(false);
        
        CombatResult result = napakalakiModel.developCombat();
        
        
        switch (result) {

          case WINGAME : 
            JOptionPane.showMessageDialog(null, "El jugador " + this.napakalakiModel.getCurrentPlayer().getName() + " ha ganado la partida");
            System.exit(0);
            break;
          case WIN :
            resultCombat.setText("Ganaste el combate!");
            this.nTurn.setEnabled(true);
            break;
          case LOSE :
            resultCombat.setText("Has perdido el combate, te toca cumplir el mal rollo");
            break;
          case LOSEANDCONVERT:
            resultCombat.setText("Has perdido el combate, te toca cumplir el mal rollo. Ahora eres sectario");
            this.playerView1.setlbSectario();
            break;
        }
        
        this.playerView1.setPlayer(this.napakalakiModel.getCurrentPlayer());
        
        //this.playerView1.getPending().setPendingBadConsequence(p.getPendingBadConsequence());
        //this.playerView1.visiblePending(true);
        
    }//GEN-LAST:event_combatActionPerformed

    private void nextMonsterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextMonsterActionPerformed
        // TODO add your handling code here:
        
        this.monsterView1.setVisible(true);
        
        this.playerView1.setBtVisible(false);
        this.nextMonster.setEnabled(false);
        
        repaint();
        
    }//GEN-LAST:event_nextMonsterActionPerformed

    private void nTurnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nTurnActionPerformed
        // TODO add your handling code here:
        
        this.combat.setEnabled(true);
        
        this.napakalakiModel.nextTurn();
        
        this.nextMonster.setEnabled(true);
        this.playerView1.setBtVisible(true);
        
        this.setNapakalaki(napakalakiModel);
        
    }//GEN-LAST:event_nTurnActionPerformed

    public void setBtNextTurn(){
        
        this.nTurn.setEnabled(true);
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton combat;
    private GUI.MonsterView monsterView1;
    private javax.swing.JButton nTurn;
    private javax.swing.JButton nextMonster;
    private GUI.PlayerView playerView1;
    private javax.swing.JLabel resultCombat;
    // End of variables declaration//GEN-END:variables
}
